/**
 * Friendly Messages
 * Converte mensagens t√©cnicas em linguagem simples e amig√°vel
 */

/**
 * Mensagens de erro amig√°veis
 */
export const friendlyErrors = {
  // Network errors
  'Network Error': {
    title: 'üåê Problema de Conex√£o',
    message: 'N√£o conseguimos conectar com a API. Verifique:\n\n' +
      '‚Ä¢ Se voc√™ est√° conectado √† internet\n' +
      '‚Ä¢ Se o endere√ßo da API est√° correto\n' +
      '‚Ä¢ Se a API est√° funcionando (pe√ßa ajuda ao administrador)',
    severity: 'error',
  },

  'CORS': {
    title: 'üîí Acesso Bloqueado pela API',
    message: 'A API n√£o permite acesso direto do navegador por quest√µes de seguran√ßa.\n\n' +
      'O que fazer?\n' +
      '‚Ä¢ Entre em contato com o administrador da API\n' +
      '‚Ä¢ Pe√ßa para ele liberar o acesso (configurar CORS)\n' +
      '‚Ä¢ Ou use um servidor intermedi√°rio',
    severity: 'warning',
  },

  '404': {
    title: '‚ùì Endere√ßo N√£o Encontrado',
    message: 'A API disse que n√£o existe nada nesse endere√ßo.\n\n' +
      'Verifique:\n' +
      '‚Ä¢ Se o endere√ßo est√° escrito corretamente\n' +
      '‚Ä¢ Se o caminho (/users, /posts, etc) est√° certo\n' +
      '‚Ä¢ Confira com o administrador da API',
    severity: 'error',
  },

  '401': {
    title: 'üîê Senha Incorreta ou Faltando',
    message: 'A API est√° pedindo uma senha (token) para liberar o acesso.\n\n' +
      'O que fazer?\n' +
      '‚Ä¢ Verifique se voc√™ colocou o token correto\n' +
      '‚Ä¢ Pe√ßa um novo token ao administrador da API\n' +
      '‚Ä¢ Certifique-se de que o token n√£o expirou',
    severity: 'error',
  },

  '403': {
    title: '‚õî Acesso Negado',
    message: 'Voc√™ n√£o tem permiss√£o para acessar esses dados.\n\n' +
      'O que fazer?\n' +
      '‚Ä¢ Entre em contato com o administrador\n' +
      '‚Ä¢ Pe√ßa permiss√£o de acesso\n' +
      '‚Ä¢ Verifique se est√° usando o token certo',
    severity: 'error',
  },

  '500': {
    title: 'üí• Erro no Servidor da API',
    message: 'A API teve um problema interno.\n\n' +
      'N√£o √© culpa sua! O que fazer?\n' +
      '‚Ä¢ Espere alguns minutos e tente novamente\n' +
      '‚Ä¢ Entre em contato com o administrador da API\n' +
      '‚Ä¢ Eles precisam corrigir o problema no servidor',
    severity: 'error',
  },

  'timeout': {
    title: '‚è±Ô∏è A API Demorou Muito para Responder',
    message: 'A resposta da API est√° demorando muito.\n\n' +
      'Isso pode acontecer se:\n' +
      '‚Ä¢ A internet est√° lenta\n' +
      '‚Ä¢ A API est√° processando muitos dados\n' +
      '‚Ä¢ O servidor da API est√° sobrecarregado\n\n' +
      'Tente novamente em alguns minutos.',
    severity: 'warning',
  },

  'invalid_json': {
    title: 'üìù Resposta da API em Formato Estranho',
    message: 'A API retornou dados em um formato que n√£o conseguimos entender.\n\n' +
      'O que fazer?\n' +
      '‚Ä¢ Verifique com o administrador da API\n' +
      '‚Ä¢ Talvez voc√™ precise configurar o "Mapeamento" diferente\n' +
      '‚Ä¢ A API pode estar com problemas',
    severity: 'error',
  },
};

/**
 * Converte erro t√©cnico em mensagem amig√°vel
 */
export const getFriendlyError = (error) => {
  // Check network error
  if (error.message === 'Network Error') {
    return friendlyErrors['Network Error'];
  }

  // Check CORS
  if (error.message && error.message.includes('CORS')) {
    return friendlyErrors['CORS'];
  }

  // Check HTTP status codes
  if (error.response) {
    const status = error.response.status;
    if (friendlyErrors[status.toString()]) {
      return friendlyErrors[status.toString()];
    }
  }

  // Check timeout
  if (error.code === 'ECONNABORTED' || error.message?.includes('timeout')) {
    return friendlyErrors['timeout'];
  }

  // Check invalid JSON
  if (error.message && error.message.includes('JSON')) {
    return friendlyErrors['invalid_json'];
  }

  // Default friendly error
  return {
    title: '‚ö†Ô∏è Algo Deu Errado',
    message: 'Aconteceu um erro que n√£o esper√°vamos.\n\n' +
      'Detalhes t√©cnicos (mostre isso para quem entende):\n' +
      (error.message || 'Erro desconhecido') + '\n\n' +
      'O que fazer?\n' +
      '‚Ä¢ Verifique sua configura√ß√£o\n' +
      '‚Ä¢ Tente recarregar a p√°gina\n' +
      '‚Ä¢ Entre em contato com o suporte',
    severity: 'error',
  };
};

/**
 * Mensagens de valida√ß√£o amig√°veis
 */
export const friendlyValidations = {
  required: (fieldName) => ({
    message: `${fieldName} √© obrigat√≥rio`,
    help: `Por favor, preencha o campo "${fieldName}" para continuar`,
  }),

  url: {
    message: 'Endere√ßo inv√°lido',
    help: 'Digite um endere√ßo v√°lido come√ßando com https:// ou http://',
    example: 'Exemplo: https://api.exemplo.com',
  },

  email: {
    message: 'Email inv√°lido',
    help: 'Digite um email v√°lido',
    example: 'Exemplo: seunome@email.com',
  },

  json: {
    message: 'Formato JSON inv√°lido',
    help: 'Esse n√£o parece ser um JSON v√°lido. Verifique v√≠rgulas, chaves e aspas.',
  },

  number: {
    message: 'Precisa ser um n√∫mero',
    help: 'Digite apenas n√∫meros (ex: 10, 20, 100)',
  },

  positive: {
    message: 'Precisa ser maior que zero',
    help: 'Digite um n√∫mero maior que zero',
  },
};

/**
 * Mensagens de sucesso amig√°veis
 */
export const friendlySuccess = {
  configSaved: {
    title: '‚úÖ Tudo Salvo!',
    message: 'Sua configura√ß√£o foi salva com sucesso. Agora voc√™ pode ver sua tabela funcionando!',
  },

  exampleLoaded: {
    title: 'üéâ Exemplo Carregado!',
    message: 'O exemplo foi carregado e est√° pronto para usar. Visite a p√°gina "Exemplo da Tabela" para ver!',
  },

  dataLoaded: {
    title: 'üìä Dados Carregados!',
    message: 'Os dados foram carregados da API com sucesso!',
  },

  testSuccess: {
    title: '‚úì Teste OK!',
    message: 'O teste funcionou perfeitamente. Confira o resultado no console do navegador.',
  },
};

/**
 * Tooltips amig√°veis para campos comuns
 */
export const friendlyTooltips = {
  baseURL: {
    title: 'Endere√ßo da API',
    content: '√â o endere√ßo principal de onde vir√£o os dados, tipo um site mas para dados. Sempre come√ßa com https://',
    example: 'Exemplo: https://api.seusite.com',
  },

  token: {
    title: 'Senha de Acesso (Token)',
    content: '√â como uma senha especial que algumas APIs pedem. Deixe em branco se sua API n√£o pedir.',
    example: 'O administrador da API deve fornecer isso para voc√™',
  },

  dataIndex: {
    title: 'Nome do Campo',
    content: '√â o nome do campo nos dados que v√™m da API. Por exemplo, se os dados t√™m { "nome": "Jo√£o" }, o dataIndex seria "nome"',
    example: 'Exemplos: nome, email, id, telefone',
  },

  renderType: {
    title: 'Como Mostrar',
    content: 'Escolha como voc√™ quer mostrar esse dado na tabela',
    options: [
      'Texto Simples - mostra como est√°',
      'Tag Colorida - mostra com cor de fundo',
      'Bot√µes - adiciona bot√µes clic√°veis',
      '√çcones - adiciona √≠cones clic√°veis',
    ],
  },

  pagination: {
    title: 'Pagina√ß√£o',
    content: '√â dividir os dados em p√°ginas, tipo quando voc√™ v√™ resultados do Google divididos em p√°ginas. Assim n√£o carrega tudo de uma vez.',
  },

  mapping: {
    title: 'Onde Est√£o os Dados',
    content: '√Äs vezes a API manda os dados dentro de "pacotes". Voc√™ precisa dizer onde est√£o os dados que voc√™ quer.',
    example: 'Se os dados v√™m em { "resultado": { "lista": [...] } }, voc√™ coloca: resultado.lista',
  },
};

export default {
  getFriendlyError,
  friendlyErrors,
  friendlyValidations,
  friendlySuccess,
  friendlyTooltips,
};
